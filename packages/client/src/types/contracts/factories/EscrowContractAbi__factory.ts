/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, Wallet } from "fuels";
import { Interface, Contract } from "fuels";
import type {
  EscrowContractAbi,
  EscrowContractAbiInterface,
} from "../EscrowContractAbi";
const _abi = [
  {
    type: "function",
    inputs: [
      {
        name: "receiver",
        type: "struct Address",
        components: [
          {
            name: "value",
            type: "b256",
            components: null,
          },
        ],
      },
      {
        name: "requested_asset_id",
        type: "struct ContractId",
        components: [
          {
            name: "value",
            type: "b256",
            components: null,
          },
        ],
      },
      {
        name: "requested_asset_amount",
        type: "u64",
        components: null,
      },
    ],
    name: "create",
    outputs: [
      {
        name: "",
        type: "u64",
        components: null,
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "escrow_id",
        type: "u64",
        components: null,
      },
    ],
    name: "accept",
    outputs: [
      {
        name: "",
        type: "()",
        components: [],
      },
    ],
  },
  {
    type: "function",
    inputs: [
      {
        name: "escrow_id",
        type: "u64",
        components: null,
      },
    ],
    name: "revert",
    outputs: [
      {
        name: "",
        type: "()",
        components: [],
      },
    ],
  },
];

export class EscrowContractAbi__factory {
  static readonly abi = _abi;
  static createInterface(): EscrowContractAbiInterface {
    return new Interface(_abi) as EscrowContractAbiInterface;
  }
  static connect(
    id: string,
    walletOrProvider: Wallet | Provider
  ): EscrowContractAbi {
    return new Contract(id, _abi, walletOrProvider) as EscrowContractAbi;
  }
}
